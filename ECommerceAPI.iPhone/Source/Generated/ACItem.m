/*
	ACItem.h
	The implementation of properties and methods for the ACItem object.
	Generated by SudzC.com
*/
#import "ACItem.h"

#import "ACItemAttributes.h"
#import "ACImageInformation.h"
#import "ACArrayOfCropInformation.h"
#import "ACArrayOfint.h"
#import "ACItemPrice.h"
#import "ACService.h"
#import "ACTransitTime.h"
@implementation ACItem
	@synthesize ItemType = _ItemType;
	@synthesize ItemNumber = _ItemNumber;
	@synthesize Sku = _Sku;
	@synthesize ItemAttributes = _ItemAttributes;
	@synthesize ImageInformation = _ImageInformation;
	@synthesize AvailableCrops = _AvailableCrops;
	@synthesize Variations = _Variations;
	@synthesize ItemPrice = _ItemPrice;
	@synthesize Service = _Service;
	@synthesize TransitTime = _TransitTime;

	- (id) init
	{
		if(self = [super init])
		{
			self.ItemType = nil;
			self.ItemNumber = nil;
			self.Sku = nil;
			self.ItemAttributes = nil; // [[ACItemAttributes alloc] init];
			self.ImageInformation = nil; // [[ACImageInformation alloc] init];
			self.AvailableCrops = [[[NSMutableArray alloc] init] autorelease];
			self.Variations = [[[NSMutableArray alloc] init] autorelease];
			self.ItemPrice = nil; // [[ACItemPrice alloc] init];
			self.Service = nil; // [[ACService alloc] init];
			self.TransitTime = nil; // [[ACTransitTime alloc] init];

		}
		return self;
	}

	+ (ACItem*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ACItem*)[[[ACItem alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.ItemType = [Soap getNodeValue: node withName: @"ItemType"];
			self.ItemNumber = [Soap getNodeValue: node withName: @"ItemNumber"];
			self.Sku = [Soap getNodeValue: node withName: @"Sku"];
			self.ItemAttributes = [[ACItemAttributes newWithNode: [Soap getNode: node withName: @"ItemAttributes"]] object];
			self.ImageInformation = [[ACImageInformation newWithNode: [Soap getNode: node withName: @"ImageInformation"]] object];
			self.AvailableCrops = [[ACArrayOfCropInformation newWithNode: [Soap getNode: node withName: @"AvailableCrops"]] object];
			self.Variations = [[ACArrayOfint newWithNode: [Soap getNode: node withName: @"Variations"]] object];
			self.ItemPrice = [[ACItemPrice newWithNode: [Soap getNode: node withName: @"ItemPrice"]] object];
			self.Service = [[ACService newWithNode: [Soap getNode: node withName: @"Service"]] object];
			self.TransitTime = [[ACTransitTime newWithNode: [Soap getNode: node withName: @"TransitTime"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Item"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.ItemType != nil) [s appendFormat: @"<ItemType>%@</ItemType>", [[self.ItemType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ItemNumber != nil) [s appendFormat: @"<ItemNumber>%@</ItemNumber>", [[self.ItemNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Sku != nil) [s appendFormat: @"<Sku>%@</Sku>", [[self.Sku stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ItemAttributes != nil) [s appendString: [self.ItemAttributes serialize: @"ItemAttributes"]];
		if (self.ImageInformation != nil) [s appendString: [self.ImageInformation serialize: @"ImageInformation"]];
		if (self.AvailableCrops != nil && self.AvailableCrops.count > 0) {
			[s appendFormat: @"<AvailableCrops>%@</AvailableCrops>", [ACArrayOfCropInformation serialize: self.AvailableCrops]];
		} else {
			[s appendString: @"<AvailableCrops/>"];
		}
		if (self.Variations != nil && self.Variations.count > 0) {
			[s appendFormat: @"<Variations>%@</Variations>", [ACArrayOfint serialize: self.Variations]];
		} else {
			[s appendString: @"<Variations/>"];
		}
		if (self.ItemPrice != nil) [s appendString: [self.ItemPrice serialize: @"ItemPrice"]];
		if (self.Service != nil) [s appendString: [self.Service serialize: @"Service"]];
		if (self.TransitTime != nil) [s appendString: [self.TransitTime serialize: @"TransitTime"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ACItem class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.ItemType != nil) { [self.ItemType release]; }
		if(self.ItemNumber != nil) { [self.ItemNumber release]; }
		if(self.Sku != nil) { [self.Sku release]; }
		if(self.ItemAttributes != nil) { [self.ItemAttributes release]; }
		if(self.ImageInformation != nil) { [self.ImageInformation release]; }
		if(self.AvailableCrops != nil) { [self.AvailableCrops release]; }
		if(self.Variations != nil) { [self.Variations release]; }
		if(self.ItemPrice != nil) { [self.ItemPrice release]; }
		if(self.Service != nil) { [self.Service release]; }
		if(self.TransitTime != nil) { [self.TransitTime release]; }
		[super dealloc];
	}

@end
