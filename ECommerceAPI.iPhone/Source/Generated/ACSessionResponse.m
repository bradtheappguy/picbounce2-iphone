/*
	ACSessionResponse.h
	The implementation of properties and methods for the ACSessionResponse object.
	Generated by SudzC.com
*/
#import "ACSessionResponse.h"

@implementation ACSessionResponse
	@synthesize SessionId = _SessionId;
	@synthesize DateExpires = _DateExpires;
	@synthesize GeoIPCountryCode = _GeoIPCountryCode;
	@synthesize IsoCurrencyCode = _IsoCurrencyCode;

	- (id) init
	{
		if(self = [super init])
		{
			self.SessionId = nil;
			self.DateExpires = nil;
			self.GeoIPCountryCode = nil;
			self.IsoCurrencyCode = nil;

		}
		return self;
	}

	+ (ACSessionResponse*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ACSessionResponse*)[[[ACSessionResponse alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.SessionId = [Soap getNodeValue: node withName: @"SessionId"];
			self.DateExpires = [Soap dateFromString: [Soap getNodeValue: node withName: @"DateExpires"]];
			self.GeoIPCountryCode = [Soap getNodeValue: node withName: @"GeoIPCountryCode"];
			self.IsoCurrencyCode = [Soap getNodeValue: node withName: @"IsoCurrencyCode"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"SessionResponse"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.SessionId != nil) [s appendFormat: @"<SessionId>%@</SessionId>", [[self.SessionId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DateExpires != nil) [s appendFormat: @"<DateExpires>%@</DateExpires>", [Soap getDateString: self.DateExpires]];
		if (self.GeoIPCountryCode != nil) [s appendFormat: @"<GeoIPCountryCode>%@</GeoIPCountryCode>", [[self.GeoIPCountryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IsoCurrencyCode != nil) [s appendFormat: @"<IsoCurrencyCode>%@</IsoCurrencyCode>", [[self.IsoCurrencyCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ACSessionResponse class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.SessionId != nil) { [self.SessionId release]; }
		if(self.DateExpires != nil) { [self.DateExpires release]; }
		if(self.GeoIPCountryCode != nil) { [self.GeoIPCountryCode release]; }
		if(self.IsoCurrencyCode != nil) { [self.IsoCurrencyCode release]; }
		[super dealloc];
	}

@end
