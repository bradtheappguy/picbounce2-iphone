/*
	ACCropInformation.h
	The implementation of properties and methods for the ACCropInformation object.
	Generated by SudzC.com
*/
#import "ACCropInformation.h"

#import "ACDimensions.h"
#import "ACImageInformation.h"
@implementation ACCropInformation
	@synthesize CropType = _CropType;
	@synthesize Dimensions = _Dimensions;
	@synthesize Image = _Image;

	- (id) init
	{
		if(self = [super init])
		{
			self.CropType = nil;
			self.Dimensions = nil; // [[ACDimensions alloc] init];
			self.Image = nil; // [[ACImageInformation alloc] init];

		}
		return self;
	}

	+ (ACCropInformation*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ACCropInformation*)[[[ACCropInformation alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.CropType = [Soap getNodeValue: node withName: @"CropType"];
			self.Dimensions = [[ACDimensions newWithNode: [Soap getNode: node withName: @"Dimensions"]] object];
			self.Image = [[ACImageInformation newWithNode: [Soap getNode: node withName: @"Image"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"CropInformation"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.CropType != nil) [s appendFormat: @"<CropType>%@</CropType>", [[self.CropType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Dimensions != nil) [s appendString: [self.Dimensions serialize: @"Dimensions"]];
		if (self.Image != nil) [s appendString: [self.Image serialize: @"Image"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ACCropInformation class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.CropType != nil) { [self.CropType release]; }
		if(self.Dimensions != nil) { [self.Dimensions release]; }
		if(self.Image != nil) { [self.Image release]; }
		[super dealloc];
	}

@end
