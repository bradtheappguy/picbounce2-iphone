/*
	ACPhoneNumber.h
	The implementation of properties and methods for the ACPhoneNumber object.
	Generated by SudzC.com
*/
#import "ACPhoneNumber.h"

@implementation ACPhoneNumber
	@synthesize Primary = _Primary;
	@synthesize Secondary = _Secondary;

	- (id) init
	{
		if(self = [super init])
		{
			self.Primary = nil;
			self.Secondary = nil;

		}
		return self;
	}

	+ (ACPhoneNumber*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ACPhoneNumber*)[[[ACPhoneNumber alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Primary = [Soap getNodeValue: node withName: @"Primary"];
			self.Secondary = [Soap getNodeValue: node withName: @"Secondary"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"PhoneNumber"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Primary != nil) [s appendFormat: @"<Primary>%@</Primary>", [[self.Primary stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Secondary != nil) [s appendFormat: @"<Secondary>%@</Secondary>", [[self.Secondary stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ACPhoneNumber class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.Primary != nil) { [self.Primary release]; }
		if(self.Secondary != nil) { [self.Secondary release]; }
		[super dealloc];
	}

@end
