/*
	ACAddress.h
	The implementation of properties and methods for the ACAddress object.
	Generated by SudzC.com
*/
#import "ACAddress.h"

#import "ACPersonName.h"
#import "ACPhoneNumber.h"
@implementation ACAddress
	@synthesize Name = _Name;
	@synthesize CompanyName = _CompanyName;
	@synthesize Address1 = _Address1;
	@synthesize Address2 = _Address2;
	@synthesize City = _City;
	@synthesize State = _State;
	@synthesize ZipCode = _ZipCode;
	@synthesize County = _County;
	@synthesize Country = _Country;
	@synthesize Phone = _Phone;

	- (id) init
	{
		if(self = [super init])
		{
			self.Name = nil; // [[ACPersonName alloc] init];
			self.CompanyName = nil;
			self.Address1 = nil;
			self.Address2 = nil;
			self.City = nil;
			self.State = nil;
			self.ZipCode = nil;
			self.County = nil;
			self.Country = nil;
			self.Phone = nil; // [[ACPhoneNumber alloc] init];

		}
		return self;
	}

	+ (ACAddress*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ACAddress*)[[[ACAddress alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Name = [[ACPersonName newWithNode: [Soap getNode: node withName: @"Name"]] object];
			self.CompanyName = [Soap getNodeValue: node withName: @"CompanyName"];
			self.Address1 = [Soap getNodeValue: node withName: @"Address1"];
			self.Address2 = [Soap getNodeValue: node withName: @"Address2"];
			self.City = [Soap getNodeValue: node withName: @"City"];
			self.State = [Soap getNodeValue: node withName: @"State"];
			self.ZipCode = [Soap getNodeValue: node withName: @"ZipCode"];
			self.County = [Soap getNodeValue: node withName: @"County"];
			self.Country = [Soap getNodeValue: node withName: @"Country"];
			self.Phone = [[ACPhoneNumber newWithNode: [Soap getNode: node withName: @"Phone"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Address"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Name != nil) [s appendString: [self.Name serialize: @"Name"]];
		if (self.CompanyName != nil) [s appendFormat: @"<CompanyName>%@</CompanyName>", [[self.CompanyName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Address1 != nil) [s appendFormat: @"<Address1>%@</Address1>", [[self.Address1 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Address2 != nil) [s appendFormat: @"<Address2>%@</Address2>", [[self.Address2 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.City != nil) [s appendFormat: @"<City>%@</City>", [[self.City stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.State != nil) [s appendFormat: @"<State>%@</State>", [[self.State stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ZipCode != nil) [s appendFormat: @"<ZipCode>%@</ZipCode>", [[self.ZipCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.County != nil) [s appendFormat: @"<County>%@</County>", [[self.County stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Country != nil) [s appendFormat: @"<Country>%@</Country>", [[self.Country stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Phone != nil) [s appendString: [self.Phone serialize: @"Phone"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ACAddress class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.Name != nil) { [self.Name release]; }
		if(self.CompanyName != nil) { [self.CompanyName release]; }
		if(self.Address1 != nil) { [self.Address1 release]; }
		if(self.Address2 != nil) { [self.Address2 release]; }
		if(self.City != nil) { [self.City release]; }
		if(self.State != nil) { [self.State release]; }
		if(self.ZipCode != nil) { [self.ZipCode release]; }
		if(self.County != nil) { [self.County release]; }
		if(self.Country != nil) { [self.Country release]; }
		if(self.Phone != nil) { [self.Phone release]; }
		[super dealloc];
	}

@end
