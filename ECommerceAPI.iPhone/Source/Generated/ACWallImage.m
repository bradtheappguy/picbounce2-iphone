/*
	ACWallImage.h
	The implementation of properties and methods for the ACWallImage object.
	Generated by SudzC.com
*/
#import "ACWallImage.h"

#import "ACImage.h"
#import "ACImage.h"
@implementation ACWallImage
	@synthesize Id = _Id;
	@synthesize Name = _Name;
	@synthesize LargeImage = _LargeImage;
	@synthesize ThumbnailImage = _ThumbnailImage;
	@synthesize UsableAreaWidth = _UsableAreaWidth;
	@synthesize UsableAreaHeight = _UsableAreaHeight;
	@synthesize UsableAreaPosY = _UsableAreaPosY;
	@synthesize UsableAreaPosX = _UsableAreaPosX;
	@synthesize ProductTargetAreaPosX = _ProductTargetAreaPosX;
	@synthesize ProductTargetAreaPosY = _ProductTargetAreaPosY;
	@synthesize WallAreaWidth = _WallAreaWidth;
	@synthesize WallAreaHeight = _WallAreaHeight;
	@synthesize WallAreaWidthInches = _WallAreaWidthInches;
	@synthesize WallAreaHeightInches = _WallAreaHeightInches;
	@synthesize Guide1Y = _Guide1Y;
	@synthesize Guide2Y = _Guide2Y;
	@synthesize RulerX1 = _RulerX1;
	@synthesize RulerX2 = _RulerX2;
	@synthesize RulerY1 = _RulerY1;
	@synthesize RulerY2 = _RulerY2;
	@synthesize RulerLength = _RulerLength;
	@synthesize Caption = _Caption;

	- (id) init
	{
		if(self = [super init])
		{
			self.Id = nil;
			self.Name = nil;
			self.LargeImage = nil; // [[ACImage alloc] init];
			self.ThumbnailImage = nil; // [[ACImage alloc] init];
			self.Caption = nil;

		}
		return self;
	}

	+ (ACWallImage*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ACWallImage*)[[[ACWallImage alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Id = [Soap getNodeValue: node withName: @"Id"];
			self.Name = [Soap getNodeValue: node withName: @"Name"];
			self.LargeImage = [[ACImage newWithNode: [Soap getNode: node withName: @"LargeImage"]] object];
			self.ThumbnailImage = [[ACImage newWithNode: [Soap getNode: node withName: @"ThumbnailImage"]] object];
			self.UsableAreaWidth = [[Soap getNodeValue: node withName: @"UsableAreaWidth"] floatValue];
			self.UsableAreaHeight = [[Soap getNodeValue: node withName: @"UsableAreaHeight"] floatValue];
			self.UsableAreaPosY = [[Soap getNodeValue: node withName: @"UsableAreaPosY"] intValue];
			self.UsableAreaPosX = [[Soap getNodeValue: node withName: @"UsableAreaPosX"] intValue];
			self.ProductTargetAreaPosX = [[Soap getNodeValue: node withName: @"ProductTargetAreaPosX"] intValue];
			self.ProductTargetAreaPosY = [[Soap getNodeValue: node withName: @"ProductTargetAreaPosY"] intValue];
			self.WallAreaWidth = [[Soap getNodeValue: node withName: @"WallAreaWidth"] floatValue];
			self.WallAreaHeight = [[Soap getNodeValue: node withName: @"WallAreaHeight"] floatValue];
			self.WallAreaWidthInches = [[Soap getNodeValue: node withName: @"WallAreaWidthInches"] floatValue];
			self.WallAreaHeightInches = [[Soap getNodeValue: node withName: @"WallAreaHeightInches"] floatValue];
			self.Guide1Y = [[Soap getNodeValue: node withName: @"Guide1Y"] intValue];
			self.Guide2Y = [[Soap getNodeValue: node withName: @"Guide2Y"] intValue];
			self.RulerX1 = [[Soap getNodeValue: node withName: @"RulerX1"] floatValue];
			self.RulerX2 = [[Soap getNodeValue: node withName: @"RulerX2"] floatValue];
			self.RulerY1 = [[Soap getNodeValue: node withName: @"RulerY1"] floatValue];
			self.RulerY2 = [[Soap getNodeValue: node withName: @"RulerY2"] floatValue];
			self.RulerLength = [[Soap getNodeValue: node withName: @"RulerLength"] floatValue];
			self.Caption = [Soap getNodeValue: node withName: @"Caption"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"WallImage"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Id != nil) [s appendFormat: @"<Id>%@</Id>", [[self.Id stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Name != nil) [s appendFormat: @"<Name>%@</Name>", [[self.Name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LargeImage != nil) [s appendString: [self.LargeImage serialize: @"LargeImage"]];
		if (self.ThumbnailImage != nil) [s appendString: [self.ThumbnailImage serialize: @"ThumbnailImage"]];
		[s appendFormat: @"<UsableAreaWidth>%@</UsableAreaWidth>", [NSString stringWithFormat: @"%f", self.UsableAreaWidth]];
		[s appendFormat: @"<UsableAreaHeight>%@</UsableAreaHeight>", [NSString stringWithFormat: @"%f", self.UsableAreaHeight]];
		[s appendFormat: @"<UsableAreaPosY>%@</UsableAreaPosY>", [NSString stringWithFormat: @"%i", self.UsableAreaPosY]];
		[s appendFormat: @"<UsableAreaPosX>%@</UsableAreaPosX>", [NSString stringWithFormat: @"%i", self.UsableAreaPosX]];
		[s appendFormat: @"<ProductTargetAreaPosX>%@</ProductTargetAreaPosX>", [NSString stringWithFormat: @"%i", self.ProductTargetAreaPosX]];
		[s appendFormat: @"<ProductTargetAreaPosY>%@</ProductTargetAreaPosY>", [NSString stringWithFormat: @"%i", self.ProductTargetAreaPosY]];
		[s appendFormat: @"<WallAreaWidth>%@</WallAreaWidth>", [NSString stringWithFormat: @"%f", self.WallAreaWidth]];
		[s appendFormat: @"<WallAreaHeight>%@</WallAreaHeight>", [NSString stringWithFormat: @"%f", self.WallAreaHeight]];
		[s appendFormat: @"<WallAreaWidthInches>%@</WallAreaWidthInches>", [NSString stringWithFormat: @"%f", self.WallAreaWidthInches]];
		[s appendFormat: @"<WallAreaHeightInches>%@</WallAreaHeightInches>", [NSString stringWithFormat: @"%f", self.WallAreaHeightInches]];
		[s appendFormat: @"<Guide1Y>%@</Guide1Y>", [NSString stringWithFormat: @"%i", self.Guide1Y]];
		[s appendFormat: @"<Guide2Y>%@</Guide2Y>", [NSString stringWithFormat: @"%i", self.Guide2Y]];
		[s appendFormat: @"<RulerX1>%@</RulerX1>", [NSString stringWithFormat: @"%f", self.RulerX1]];
		[s appendFormat: @"<RulerX2>%@</RulerX2>", [NSString stringWithFormat: @"%f", self.RulerX2]];
		[s appendFormat: @"<RulerY1>%@</RulerY1>", [NSString stringWithFormat: @"%f", self.RulerY1]];
		[s appendFormat: @"<RulerY2>%@</RulerY2>", [NSString stringWithFormat: @"%f", self.RulerY2]];
		[s appendFormat: @"<RulerLength>%@</RulerLength>", [NSString stringWithFormat: @"%f", self.RulerLength]];
		if (self.Caption != nil) [s appendFormat: @"<Caption>%@</Caption>", [[self.Caption stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ACWallImage class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.Id != nil) { [self.Id release]; }
		if(self.Name != nil) { [self.Name release]; }
		if(self.LargeImage != nil) { [self.LargeImage release]; }
		if(self.ThumbnailImage != nil) { [self.ThumbnailImage release]; }
		if(self.Caption != nil) { [self.Caption release]; }
		[super dealloc];
	}

@end
