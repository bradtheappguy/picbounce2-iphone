/*
	ACArtist.h
	The implementation of properties and methods for the ACArtist object.
	Generated by SudzC.com
*/
#import "ACArtist.h"

@implementation ACArtist
	@synthesize ArtistId = _ArtistId;
	@synthesize FirstName = _FirstName;
	@synthesize LastName = _LastName;

	- (id) init
	{
		if(self = [super init])
		{
			self.FirstName = nil;
			self.LastName = nil;

		}
		return self;
	}

	+ (ACArtist*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ACArtist*)[[[ACArtist alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.ArtistId = [[Soap getNodeValue: node withName: @"ArtistId"] intValue];
			self.FirstName = [Soap getNodeValue: node withName: @"FirstName"];
			self.LastName = [Soap getNodeValue: node withName: @"LastName"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Artist"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<ArtistId>%@</ArtistId>", [NSString stringWithFormat: @"%i", self.ArtistId]];
		if (self.FirstName != nil) [s appendFormat: @"<FirstName>%@</FirstName>", [[self.FirstName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LastName != nil) [s appendFormat: @"<LastName>%@</LastName>", [[self.LastName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ACArtist class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.FirstName != nil) { [self.FirstName release]; }
		if(self.LastName != nil) { [self.LastName release]; }
		[super dealloc];
	}

@end
