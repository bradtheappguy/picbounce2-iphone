/*
	ACECommerceAPI.m
	The implementation classes and methods for the ECommerceAPI web service.
	Generated by SudzC.com
*/

#import "ACECommerceAPI.h"
				
#import "Soap.h"
	
#import "ACArrayOfGalleryAttributes.h"
#import "ACArrayOfWallImage.h"
#import "ACArrayOfGalleryItem.h"
#import "ACArrayOfFeaturedCategory.h"
#import "ACArrayOfCategory.h"
#import "ACRefinements.h"
#import "ACArrayOfItem.h"
#import "ACOrderAttributes.h"
#import "ACArrayOfShippingOption.h"
#import "ACService.h"
#import "ACArrayOfCropInformation.h"
#import "ACArrayOfCartItem.h"
#import "ACArrayOfShipment.h"
#import "ACArrayOfint.h"
#import "ACItem.h"
#import "ACAddress.h"
#import "ACGalleryListResponse.h"
#import "ACGalleryItem.h"
#import "ACGalleryDetailResponse.h"
#import "ACFeaturedCategory.h"
#import "ACFeaturedCategoryResponse.h"
#import "ACCategory.h"
#import "ACItemResponse.h"
#import "ACOrderResponse.h"
#import "ACShippingOptionResponse.h"
#import "ACDeepZoom.h"
#import "ACPixelDimensions.h"
#import "ACPhoneNumber.h"
#import "ACPersonName.h"
#import "ACOperationResponse.h"
#import "ACCartResponse.h"
#import "ACWallImage.h"
#import "ACGallery.h"
#import "ACItemSearchResponse.h"
#import "ACShippingOption.h"
#import "ACTransitTime.h"
#import "ACCropInformation.h"
#import "ACImage.h"
#import "ACDimensions.h"
#import "ACArtist.h"
#import "ACCart.h"
#import "ACSessionResponse.h"
#import "ACComponentDimensions.h"
#import "ACSelectedComponent.h"
#import "ACItemPrice.h"
#import "ACCartItem.h"
#import "ACShipment.h"
#import "ACCartTotal.h"
#import "ACGalleryAttributes.h"
#import "ACFrame.h"
#import "ACImageInformation.h"
#import "ACItemAttributes.h"

/* Implementation of the service */
				
@implementation ACECommerceAPI

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://dev-api.art.com/ECommerceAPI.svc/soap";
			self.namespace = @"http://api.art.com";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (ACECommerceAPI*) service {
		return [ACECommerceAPI serviceWithUsername:nil andPassword:nil];
	}
	
	+ (ACECommerceAPI*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[[ACECommerceAPI alloc] initWithUsername:username andPassword:password] autorelease];
	}

		
	/* Returns ACCartResponse*.  */
	- (SoapRequest*) CartAddItem: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId itemId: (NSString*) itemId lookupType: (NSString*) lookupType quantity: (int) quantity
	{
		return [self CartAddItem: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId itemId: itemId lookupType: lookupType quantity: quantity];
	}

	- (SoapRequest*) CartAddItem: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId itemId: (NSString*) itemId lookupType: (NSString*) lookupType quantity: (int) quantity
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: itemId forName: @"itemId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: lookupType forName: @"lookupType"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: quantity] forName: @"quantity"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CartAddItem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICart/CartAddItem" postData: _envelope deserializeTo: [[ACCartResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACShippingOptionResponse*.  */
	- (SoapRequest*) CartGetShippingOptions: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId
	{
		return [self CartGetShippingOptions: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId];
	}

	- (SoapRequest*) CartGetShippingOptions: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CartGetShippingOptions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICart/CartGetShippingOptions" postData: _envelope deserializeTo: [[ACShippingOptionResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACOrderResponse*.  */
	- (SoapRequest*) CartSubmitForOrder: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId
	{
		return [self CartSubmitForOrder: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId];
	}

	- (SoapRequest*) CartSubmitForOrder: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CartSubmitForOrder" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICart/CartSubmitForOrder" postData: _envelope deserializeTo: [[ACOrderResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACCartResponse*.  */
	- (SoapRequest*) CartUpdateCartItemQuantity: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId cartItemId: (NSString*) cartItemId quantity: (int) quantity
	{
		return [self CartUpdateCartItemQuantity: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId cartItemId: cartItemId quantity: quantity];
	}

	- (SoapRequest*) CartUpdateCartItemQuantity: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId cartItemId: (NSString*) cartItemId quantity: (int) quantity
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: cartItemId forName: @"cartItemId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: quantity] forName: @"quantity"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CartUpdateCartItemQuantity" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICart/CartUpdateCartItemQuantity" postData: _envelope deserializeTo: [[ACCartResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACCartResponse*.  */
	- (SoapRequest*) CartUpdateShippingAddress: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId firstName: (NSString*) firstName lastName: (NSString*) lastName addressLine1: (NSString*) addressLine1 addressLine2: (NSString*) addressLine2 companyName: (NSString*) companyName city: (NSString*) city state: (NSString*) state twoDigitIsoCountryCode: (NSString*) twoDigitIsoCountryCode zipCode: (NSString*) zipCode primaryPhone: (NSString*) primaryPhone secondaryPhone: (NSString*) secondaryPhone emailAddress: (NSString*) emailAddress
	{
		return [self CartUpdateShippingAddress: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId firstName: firstName lastName: lastName addressLine1: addressLine1 addressLine2: addressLine2 companyName: companyName city: city state: state twoDigitIsoCountryCode: twoDigitIsoCountryCode zipCode: zipCode primaryPhone: primaryPhone secondaryPhone: secondaryPhone emailAddress: emailAddress];
	}

	- (SoapRequest*) CartUpdateShippingAddress: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId firstName: (NSString*) firstName lastName: (NSString*) lastName addressLine1: (NSString*) addressLine1 addressLine2: (NSString*) addressLine2 companyName: (NSString*) companyName city: (NSString*) city state: (NSString*) state twoDigitIsoCountryCode: (NSString*) twoDigitIsoCountryCode zipCode: (NSString*) zipCode primaryPhone: (NSString*) primaryPhone secondaryPhone: (NSString*) secondaryPhone emailAddress: (NSString*) emailAddress
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: firstName forName: @"firstName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: lastName forName: @"lastName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: addressLine1 forName: @"addressLine1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: addressLine2 forName: @"addressLine2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: companyName forName: @"companyName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: city forName: @"city"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: state forName: @"state"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: twoDigitIsoCountryCode forName: @"twoDigitIsoCountryCode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: zipCode forName: @"zipCode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: primaryPhone forName: @"primaryPhone"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: secondaryPhone forName: @"secondaryPhone"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: emailAddress forName: @"emailAddress"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CartUpdateShippingAddress" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICart/CartUpdateShippingAddress" postData: _envelope deserializeTo: [[ACCartResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACCartResponse*.  */
	- (SoapRequest*) CartUpdateShipmentPriority: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId shipmentPriority: (NSString*) shipmentPriority
	{
		return [self CartUpdateShipmentPriority: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId shipmentPriority: shipmentPriority];
	}

	- (SoapRequest*) CartUpdateShipmentPriority: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId shipmentPriority: (NSString*) shipmentPriority
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: shipmentPriority forName: @"shipmentPriority"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CartUpdateShipmentPriority" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICart/CartUpdateShipmentPriority" postData: _envelope deserializeTo: [[ACCartResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACItemResponse*.  */
	- (SoapRequest*) CatalogItemGet: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId itemId: (NSString*) itemId lookupType: (NSString*) lookupType
	{
		return [self CatalogItemGet: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId itemId: itemId lookupType: lookupType];
	}

	- (SoapRequest*) CatalogItemGet: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId itemId: (NSString*) itemId lookupType: (NSString*) lookupType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: itemId forName: @"itemId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: lookupType forName: @"lookupType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CatalogItemGet" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICatalog/CatalogItemGet" postData: _envelope deserializeTo: [[ACItemResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACItemResponse*.  */
	- (SoapRequest*) CatalogItemGetFrameRecommendations: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId itemId: (NSString*) itemId lookupType: (NSString*) lookupType maxNumberOfRecommendations: (int) maxNumberOfRecommendations maxJpegImageWidth: (int) maxJpegImageWidth maxJpegImageHeight: (int) maxJpegImageHeight
	{
		return [self CatalogItemGetFrameRecommendations: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId itemId: itemId lookupType: lookupType maxNumberOfRecommendations: maxNumberOfRecommendations maxJpegImageWidth: maxJpegImageWidth maxJpegImageHeight: maxJpegImageHeight];
	}

	- (SoapRequest*) CatalogItemGetFrameRecommendations: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId itemId: (NSString*) itemId lookupType: (NSString*) lookupType maxNumberOfRecommendations: (int) maxNumberOfRecommendations maxJpegImageWidth: (int) maxJpegImageWidth maxJpegImageHeight: (int) maxJpegImageHeight
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: itemId forName: @"itemId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: lookupType forName: @"lookupType"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: maxNumberOfRecommendations] forName: @"maxNumberOfRecommendations"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: maxJpegImageWidth] forName: @"maxJpegImageWidth"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: maxJpegImageHeight] forName: @"maxJpegImageHeight"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CatalogItemGetFrameRecommendations" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICatalog/CatalogItemGetFrameRecommendations" postData: _envelope deserializeTo: [[ACItemResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACItemSearchResponse*.  */
	- (SoapRequest*) CatalogItemSearch: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId searchText: (NSString*) searchText categoryIdList: (NSString*) categoryIdList artistCategoryId: (int) artistCategoryId numberOfRecords: (int) numberOfRecords pageNumber: (int) pageNumber sortBy: (NSString*) sortBy sortDirection: (NSString*) sortDirection
	{
		return [self CatalogItemSearch: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId searchText: searchText categoryIdList: categoryIdList artistCategoryId: artistCategoryId numberOfRecords: numberOfRecords pageNumber: pageNumber sortBy: sortBy sortDirection: sortDirection];
	}

	- (SoapRequest*) CatalogItemSearch: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId searchText: (NSString*) searchText categoryIdList: (NSString*) categoryIdList artistCategoryId: (int) artistCategoryId numberOfRecords: (int) numberOfRecords pageNumber: (int) pageNumber sortBy: (NSString*) sortBy sortDirection: (NSString*) sortDirection
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: searchText forName: @"searchText"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: categoryIdList forName: @"categoryIdList"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: artistCategoryId] forName: @"artistCategoryId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: numberOfRecords] forName: @"numberOfRecords"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: pageNumber] forName: @"pageNumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sortBy forName: @"sortBy"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sortDirection forName: @"sortDirection"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CatalogItemSearch" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICatalog/CatalogItemSearch" postData: _envelope deserializeTo: [[ACItemSearchResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACItemSearchResponse*.  */
	- (SoapRequest*) CatalogItemSearchByImage: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId imageUrl: (NSString*) imageUrl numberOfRecords: (int) numberOfRecords pageNumbers: (int) pageNumbers
	{
		return [self CatalogItemSearchByImage: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId imageUrl: imageUrl numberOfRecords: numberOfRecords pageNumbers: pageNumbers];
	}

	- (SoapRequest*) CatalogItemSearchByImage: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId imageUrl: (NSString*) imageUrl numberOfRecords: (int) numberOfRecords pageNumbers: (int) pageNumbers
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: imageUrl forName: @"imageUrl"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: numberOfRecords] forName: @"numberOfRecords"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: pageNumbers] forName: @"pageNumbers"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CatalogItemSearchByImage" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICatalog/CatalogItemSearchByImage" postData: _envelope deserializeTo: [[ACItemSearchResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACFeaturedCategoryResponse*.  */
	- (SoapRequest*) CatalogGetFeaturedCategories: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId
	{
		return [self CatalogGetFeaturedCategories: handler action: nil apiKey: apiKey applicationId: applicationId sessionId: sessionId];
	}

	- (SoapRequest*) CatalogGetFeaturedCategories: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId sessionId: (NSString*) sessionId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"CatalogGetFeaturedCategories" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/ICatalog/CatalogGetFeaturedCategories" postData: _envelope deserializeTo: [[ACFeaturedCategoryResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACGalleryDetailResponse*.  */
	- (SoapRequest*) GalleryAddItem: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey authToken: (NSString*) authToken galleryId: (NSString*) galleryId itemId: (NSString*) itemId lookupType: (NSString*) lookupType
	{
		return [self GalleryAddItem: handler action: nil apiKey: apiKey authToken: authToken galleryId: galleryId itemId: itemId lookupType: lookupType];
	}

	- (SoapRequest*) GalleryAddItem: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey authToken: (NSString*) authToken galleryId: (NSString*) galleryId itemId: (NSString*) itemId lookupType: (NSString*) lookupType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: authToken forName: @"authToken"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: galleryId forName: @"galleryId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: itemId forName: @"itemId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: lookupType forName: @"lookupType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GalleryAddItem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/IGallery/GalleryAddItem" postData: _envelope deserializeTo: [[ACGalleryDetailResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACGalleryDetailResponse*.  */
	- (SoapRequest*) GalleryAddForUser: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey authToken: (NSString*) authToken galleryName: (NSString*) galleryName galleryVisibility: (NSString*) galleryVisibility
	{
		return [self GalleryAddForUser: handler action: nil apiKey: apiKey authToken: authToken galleryName: galleryName galleryVisibility: galleryVisibility];
	}

	- (SoapRequest*) GalleryAddForUser: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey authToken: (NSString*) authToken galleryName: (NSString*) galleryName galleryVisibility: (NSString*) galleryVisibility
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: authToken forName: @"authToken"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: galleryName forName: @"galleryName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: galleryVisibility forName: @"galleryVisibility"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GalleryAddForUser" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/IGallery/GalleryAddForUser" postData: _envelope deserializeTo: [[ACGalleryDetailResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACGalleryDetailResponse*.  */
	- (SoapRequest*) GalleryAddWallImageByImageGUID: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey authToken: (NSString*) authToken galleryId: (NSString*) galleryId wallName: (NSString*) wallName wallImageGuid: (NSString*) wallImageGuid wallAreaWidth: (NSDecimalNumber*) wallAreaWidth wallAreaHeight: (NSDecimalNumber*) wallAreaHeight wallAreaWidthInches: (NSDecimalNumber*) wallAreaWidthInches wallAreaHeightInches: (NSDecimalNumber*) wallAreaHeightInches rulerX1: (NSDecimalNumber*) rulerX1 rulerX2: (NSDecimalNumber*) rulerX2 rulerY1: (NSDecimalNumber*) rulerY1 rulerY2: (NSDecimalNumber*) rulerY2 rulerLength: (NSDecimalNumber*) rulerLength caption: (NSString*) caption
	{
		return [self GalleryAddWallImageByImageGUID: handler action: nil apiKey: apiKey authToken: authToken galleryId: galleryId wallName: wallName wallImageGuid: wallImageGuid wallAreaWidth: wallAreaWidth wallAreaHeight: wallAreaHeight wallAreaWidthInches: wallAreaWidthInches wallAreaHeightInches: wallAreaHeightInches rulerX1: rulerX1 rulerX2: rulerX2 rulerY1: rulerY1 rulerY2: rulerY2 rulerLength: rulerLength caption: caption];
	}

	- (SoapRequest*) GalleryAddWallImageByImageGUID: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey authToken: (NSString*) authToken galleryId: (NSString*) galleryId wallName: (NSString*) wallName wallImageGuid: (NSString*) wallImageGuid wallAreaWidth: (NSDecimalNumber*) wallAreaWidth wallAreaHeight: (NSDecimalNumber*) wallAreaHeight wallAreaWidthInches: (NSDecimalNumber*) wallAreaWidthInches wallAreaHeightInches: (NSDecimalNumber*) wallAreaHeightInches rulerX1: (NSDecimalNumber*) rulerX1 rulerX2: (NSDecimalNumber*) rulerX2 rulerY1: (NSDecimalNumber*) rulerY1 rulerY2: (NSDecimalNumber*) rulerY2 rulerLength: (NSDecimalNumber*) rulerLength caption: (NSString*) caption
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: authToken forName: @"authToken"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: galleryId forName: @"galleryId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: wallName forName: @"wallName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: wallImageGuid forName: @"wallImageGuid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: wallAreaWidth forName: @"wallAreaWidth"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: wallAreaHeight forName: @"wallAreaHeight"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: wallAreaWidthInches forName: @"wallAreaWidthInches"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: wallAreaHeightInches forName: @"wallAreaHeightInches"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: rulerX1 forName: @"rulerX1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: rulerX2 forName: @"rulerX2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: rulerY1 forName: @"rulerY1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: rulerY2 forName: @"rulerY2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: rulerLength forName: @"rulerLength"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: caption forName: @"caption"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GalleryAddWallImageByImageGUID" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/IGallery/GalleryAddWallImageByImageGUID" postData: _envelope deserializeTo: [[ACGalleryDetailResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACGalleryDetailResponse*.  */
	- (SoapRequest*) GalleryGet: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey galleryId: (NSString*) galleryId
	{
		return [self GalleryGet: handler action: nil apiKey: apiKey galleryId: galleryId];
	}

	- (SoapRequest*) GalleryGet: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey galleryId: (NSString*) galleryId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: galleryId forName: @"galleryId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GalleryGet" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/IGallery/GalleryGet" postData: _envelope deserializeTo: [[ACGalleryDetailResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACGalleryListResponse*.  */
	- (SoapRequest*) GalleryGetByUser: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey authToken: (NSString*) authToken
	{
		return [self GalleryGetByUser: handler action: nil apiKey: apiKey authToken: authToken];
	}

	- (SoapRequest*) GalleryGetByUser: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey authToken: (NSString*) authToken
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: authToken forName: @"authToken"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GalleryGetByUser" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/IGallery/GalleryGetByUser" postData: _envelope deserializeTo: [[ACGalleryListResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACGalleryDetailResponse*.  */
	- (SoapRequest*) GalleryGetUserDefaultMobileGallery: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey authToken: (NSString*) authToken
	{
		return [self GalleryGetUserDefaultMobileGallery: handler action: nil apiKey: apiKey authToken: authToken];
	}

	- (SoapRequest*) GalleryGetUserDefaultMobileGallery: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey authToken: (NSString*) authToken
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: authToken forName: @"authToken"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GalleryGetUserDefaultMobileGallery" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/IGallery/GalleryGetUserDefaultMobileGallery" postData: _envelope deserializeTo: [[ACGalleryDetailResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACGalleryDetailResponse*.  */
	- (SoapRequest*) GalleryGetUserDefaultWallGallery: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey authToken: (NSString*) authToken
	{
		return [self GalleryGetUserDefaultWallGallery: handler action: nil apiKey: apiKey authToken: authToken];
	}

	- (SoapRequest*) GalleryGetUserDefaultWallGallery: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey authToken: (NSString*) authToken
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: authToken forName: @"authToken"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GalleryGetUserDefaultWallGallery" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/IGallery/GalleryGetUserDefaultWallGallery" postData: _envelope deserializeTo: [[ACGalleryDetailResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACGalleryDetailResponse*.  */
	- (SoapRequest*) GalleryRemoveItem: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey authToken: (NSString*) authToken galleryId: (NSString*) galleryId galleryItemId: (NSString*) galleryItemId
	{
		return [self GalleryRemoveItem: handler action: nil apiKey: apiKey authToken: authToken galleryId: galleryId galleryItemId: galleryItemId];
	}

	- (SoapRequest*) GalleryRemoveItem: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey authToken: (NSString*) authToken galleryId: (NSString*) galleryId galleryItemId: (NSString*) galleryItemId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: authToken forName: @"authToken"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: galleryId forName: @"galleryId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: galleryItemId forName: @"galleryItemId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GalleryRemoveItem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/IGallery/GalleryRemoveItem" postData: _envelope deserializeTo: [[ACGalleryDetailResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ACSessionResponse*.  */
	- (SoapRequest*) InitializeAPI: (id <SoapDelegate>) handler apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId twoDigitISOCountryCode: (NSString*) twoDigitISOCountryCode twoDigitISOLanguageCode: (NSString*) twoDigitISOLanguageCode
	{
		return [self InitializeAPI: handler action: nil apiKey: apiKey applicationId: applicationId twoDigitISOCountryCode: twoDigitISOCountryCode twoDigitISOLanguageCode: twoDigitISOLanguageCode];
	}

	- (SoapRequest*) InitializeAPI: (id) _target action: (SEL) _action apiKey: (NSString*) apiKey applicationId: (NSString*) applicationId twoDigitISOCountryCode: (NSString*) twoDigitISOCountryCode twoDigitISOLanguageCode: (NSString*) twoDigitISOLanguageCode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: apiKey forName: @"apiKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: applicationId forName: @"applicationId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: twoDigitISOCountryCode forName: @"twoDigitISOCountryCode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: twoDigitISOLanguageCode forName: @"twoDigitISOLanguageCode"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"InitializeAPI" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://api.art.com/IECommerceAPI/InitializeAPI" postData: _envelope deserializeTo: [[ACSessionResponse alloc] autorelease]];
		[_request send];
		return _request;
	}


@end
	